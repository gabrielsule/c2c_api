//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace car2city
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CarTwoCityEntities : DbContext
    {
        public CarTwoCityEntities()
            : base("name=CarTwoCityEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Pai> Pais { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumentoes { get; set; }
        public virtual DbSet<TipoEquipaje> TipoEquipajes { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Vehiculo> Vehiculoes { get; set; }
        public virtual DbSet<Viaje> Viajes { get; set; }
        public virtual DbSet<ViajeCaracteristica> ViajeCaracteristicas { get; set; }
        public virtual DbSet<ViajeUsuario> ViajeUsuarios { get; set; }
    
        public virtual int sp_UsuarioInsert(string nombre, string apellido, string usuario, string email, string sexo, Nullable<int> idPais, Nullable<int> idTipoDoc, Nullable<decimal> numeroDoc, string telefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("idPais", idPais) :
                new ObjectParameter("idPais", typeof(int));
    
            var idTipoDocParameter = idTipoDoc.HasValue ?
                new ObjectParameter("idTipoDoc", idTipoDoc) :
                new ObjectParameter("idTipoDoc", typeof(int));
    
            var numeroDocParameter = numeroDoc.HasValue ?
                new ObjectParameter("numeroDoc", numeroDoc) :
                new ObjectParameter("numeroDoc", typeof(decimal));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsuarioInsert", nombreParameter, apellidoParameter, usuarioParameter, emailParameter, sexoParameter, idPaisParameter, idTipoDocParameter, numeroDocParameter, telefonoParameter);
        }
    }
}
